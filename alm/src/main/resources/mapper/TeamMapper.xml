<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.alm.dao.TeamMapper">
  <resultMap id="BaseResultMap" type="com.dili.alm.domain.Team">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="deletable" jdbcType="BIT" property="deletable" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, project_id, member_id, join_time, role, deletable, leave_time
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from team
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.alm.domain.Team">
    <!--
      WARNING - @mbg.generated
    -->
    update team
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="deletable != null">
        deletable = #{deletable,jdbcType=BIT},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

	<select id="listByProjectIds" parameterType="java.util.List" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from team
		where project_id in
		<foreach close=")" collection="list" item="projectId" open="(" separator=",">
			#{projectId}
		</foreach>
		and member_state = 1
	</select>

	<select id="countProjectMember" parameterType="Long" resultType="Integer">
		SELECT COUNT(*) FROM (SELECT DISTINCT member_id,project_id FROM team)
		t
		WHERE t.project_id = #{projectId}
	</select>
	<select id="selectByProjectId" parameterType="Long" resultType="Long">
		SELECT DISTINCT t.member_id FROM team t
		WHERE t.project_id = #{projectId}
	</select>
	
</mapper>