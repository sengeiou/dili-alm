<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.alm.dao.TaskMapper">
	<resultMap id="BaseResultMap" type="com.dili.alm.domain.Task">
		<!-- WARNING - @mbg.generated -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="project_id" jdbcType="BIGINT"
			property="projectId" />
		<result column="version_id" jdbcType="BIGINT"
			property="versionId" />
		<result column="phase_id" jdbcType="BIGINT" property="phaseId" />
		<result column="start_date" jdbcType="TIMESTAMP"
			property="startDate" />
		<result column="end_date" jdbcType="TIMESTAMP"
			property="endDate" />
		<result column="before_task" jdbcType="BIGINT"
			property="beforeTask" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="owner" jdbcType="BIGINT" property="owner" />
		<result column="plan_time" jdbcType="SMALLINT"
			property="planTime" />
		<result column="flow" jdbcType="BIT" property="flow" />
		<result column="change_id" jdbcType="BIGINT"
			property="changeId" />
		<result column="describe" jdbcType="VARCHAR"
			property="describe" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="created" jdbcType="TIMESTAMP"
			property="created" />
		<result column="modified" jdbcType="TIMESTAMP"
			property="modified" />
		<result column="create_member_id" jdbcType="BIGINT"
			property="createMemberId" />
		<result column="modify_member_id" jdbcType="BIGINT"
			property="modifyMemberId" />
		<result column="fact_begin_date" jdbcType="TIMESTAMP"
			property="factBeginDate" />
		<result column="fact_end_date" jdbcType="TIMESTAMP"
			property="factEndDate" />
	</resultMap>

	<resultMap
		type="com.dili.alm.domain.dto.UserWorkHourDetailDto"
		id="UserWorkHourDetailRM">
		<result column="task_date" property="taskDate" />
		<result column="task_hours" property="taskHours" />
		<result column="overtime_hours" property="overtimeHours" />
		<result column="work_content" property="workContent" />
	</resultMap>

	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated -->
		id, name, project_id, version_id, phase_id, start_date, end_date,
		before_task, type,
		owner, plan_time, flow, change_id, describe, status,
		created, modified,
		create_member_id,
		modify_member_id,fact_begin_date,fact_end_date
	</sql>

	<sql id="Join_Column_List">
		t.id,
		t.name,
		t.project_id,
		t.version_id,
		t.phase_id,
		t.start_date,
		t.end_date,
		t.before_task,
		t.type,
		t.owner,
		t.plan_time,
		t.flow,
		t.change_id,
		t.describe,
		t.status,
		t.created,
		t.modified,
		t.create_member_id,
		t.modify_member_id,
		t.fact_begin_date,
		t.fact_end_date
	</sql>

	<select id="selectBy" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated -->
		select
		<include refid="Base_Column_List" />
		from task
		where id = #{id,jdbcType=BIGINT}
	</select>
	<update id="updateBy" parameterType="com.dili.alm.domain.Task">
		<!-- WARNING - @mbg.generated -->
		update task
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="projectId != null">
				project_id = #{projectId,jdbcType=BIGINT},
			</if>
			<if test="versionId != null">
				version_id = #{versionId,jdbcType=BIGINT},
			</if>
			<if test="phaseId != null">
				phase_id = #{phaseId,jdbcType=BIGINT},
			</if>
			<if test="startDate != null">
				start_date = #{startDate,jdbcType=TIMESTAMP},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=TIMESTAMP},
			</if>
			<if test="beforeTask != null">
				before_task = #{beforeTask,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="owner != null">
				owner = #{owner,jdbcType=BIGINT},
			</if>
			<if test="planTime != null">
				plan_time = #{planTime,jdbcType=SMALLINT},
			</if>
			<if test="flow != null">
				flow = #{flow,jdbcType=BIT},
			</if>
			<if test="changeId != null">
				change_id = #{changeId,jdbcType=BIGINT},
			</if>
			<if test="describe != null">
				describe = #{describe,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="modified != null">
				modified = #{modified,jdbcType=TIMESTAMP},
			</if>
			<if test="createMemberId != null">
				create_member_id = #{createMemberId,jdbcType=BIGINT},
			</if>
			<if test="modifyMemberId != null">
				modify_member_id = #{modifyMemberId,jdbcType=BIGINT},
			</if>
			<if test="factBeginDate != null">
				start_date = #{factBeginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="factEndDate != null">
				end_date = #{factEndDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="selectByProjectState" parameterType="Integer"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Join_Column_List" />
		FROM
		task t
		INNER JOIN project_phase pp ON t.phase_id = pp.id
		INNER JOIN
		project p ON pp.project_id = p.id
		WHERE p.project_state = 1
	</select>

	<select id="countNotCompletedByPhaseId"
		parameterType="java.util.Map" resultType="Integer">
		select count(*) from task
		where (status = #{startStatus} or
		status =
		#{notCompletedStatus}) and
		phase_id = #{phaseId}
	</select>
	<!-- 根据群组查询信息 -->
	<select id="selectByTeam" resultType="com.dili.alm.domain.Task">
		select * from alm.task as task where task.project_id in
		(select
		t2.project_id from alm.team as t2 where t2.project_id in(select
		t.project_id from alm.team as t where t.member_id
		=#{selectOwner,jdbcType=BIGINT}))


		<if test="task.name != null">
			and task.name like
			CONCAT("%",#{task.name,jdbcType=VARCHAR},"%")
		</if>
		<if test="task.projectId != null and task.projectId != 0">
			and task.project_id = #{task.projectId,jdbcType=BIGINT}
		</if>
		<if test="task.versionId != null and task.versionId != 0">
			and task.version_id = #{task.versionId,jdbcType=BIGINT}
		</if>
		<if test="ids != null">
			and task.phase_id in
			<foreach item="item" index="index" collection="ids" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="task.owner != null and task.owner != 0">
			and task.owner = #{task.owner,jdbcType=BIGINT}
		</if>
		<if test="task.startDate != null">
			and task.start_date = #{task.startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.endDate != null">
			and task.end_date = #{task.endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.beforeTask != null">
			and task.before_task = #{task.beforeTask,jdbcType=BIGINT}
		</if>
		<if test="task.type != null">
			and task.type = #{task.type,jdbcType=INTEGER}
		</if>
		<if test="task.planTime != null">
			and task.plan_time = #{task.planTime,jdbcType=SMALLINT}
		</if>
		<if test="task.flow != null">
			and task.flow = #{task.flow,jdbcType=BIT}
		</if>
		<if test="task.changeId != null">
			and task.change_id = #{task.changeId,jdbcType=BIGINT}
		</if>
		<if test="task.describe != null">
			and task.describe = #{task.describe,jdbcType=VARCHAR}
		</if>
		<if test="task.status != null">
			and task.status = #{task.status,jdbcType=TINYINT}
		</if>
		<if test="task.created != null">
			and task.created = #{task.created,jdbcType=TIMESTAMP}
		</if>
		<if test="task.modified != null">
			and task.modified = #{task.modified,jdbcType=TIMESTAMP}
		</if>
		<if test="task.createMemberId != null">
			and task.create_member_id =
			#{task.createMemberId,jdbcType=BIGINT}
		</if>
		<if test="task.modifyMemberId != null">
			and task.modify_member_id =
			#{task.modifyMemberId,jdbcType=BIGINT}
		</if>
		<if test="task.factBeginDate != null">
			and task.start_date =
			#{task.factBeginDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.factEndDate != null">
			and task.end_date = #{task.factEndDate,jdbcType=TIMESTAMP}
		</if>
		ORDER BY task.created DESC
		<if test="task.page != null and task.rows != null">
			limit ${(task.page-1)*task.rows},${task.rows}
		</if>
	</select>
	<select id="selectByTeamCount" resultType="int">
		select count(1) from alm.task as task where task.project_id in
		(select
		t2.project_id from alm.team as t2 where t2.project_id in(select
		t.project_id from alm.team as t where t.member_id
		=#{selectOwner,jdbcType=BIGINT}))


		<if test="task.name != null">
			and task.name like
			CONCAT("%",#{task.name,jdbcType=VARCHAR},"%")
		</if>
		<if test="task.projectId != null and task.projectId != 0">
			and task.project_id = #{task.projectId,jdbcType=BIGINT}
		</if>
		<if test="task.versionId != null and task.versionId != 0">
			and task.version_id = #{task.versionId,jdbcType=BIGINT}
		</if>
		<if test="ids != null">
			and task.phase_id in
			<foreach item="item" index="index" collection="ids" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="task.owner != null and task.owner != 0">
			and task.owner = #{task.owner,jdbcType=BIGINT}
		</if>
		<if test="task.startDate != null">
			and task.start_date = #{task.startDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.endDate != null">
			and task.end_date = #{task.endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.beforeTask != null">
			and task.before_task = #{task.beforeTask,jdbcType=BIGINT}
		</if>
		<if test="task.type != null">
			and task.type = #{task.type,jdbcType=INTEGER}
		</if>
		<if test="task.planTime != null">
			and task.plan_time = #{task.planTime,jdbcType=SMALLINT}
		</if>
		<if test="task.flow != null">
			and task.flow = #{task.flow,jdbcType=BIT}
		</if>
		<if test="task.changeId != null">
			and task.change_id = #{task.changeId,jdbcType=BIGINT}
		</if>
		<if test="task.describe != null">
			and task.describe = #{task.describe,jdbcType=VARCHAR}
		</if>
		<if test="task.status != null">
			and task.status = #{task.status,jdbcType=TINYINT}
		</if>
		<if test="task.created != null">
			and task.created = #{task.created,jdbcType=TIMESTAMP}
		</if>
		<if test="task.modified != null">
			and task.modified = #{task.modified,jdbcType=TIMESTAMP}
		</if>
		<if test="task.createMemberId != null">
			and task.create_member_id =
			#{task.createMemberId,jdbcType=BIGINT}
		</if>
		<if test="task.modifyMemberId != null">
			and task.modify_member_id =
			#{task.modifyMemberId,jdbcType=BIGINT}
		</if>
		<if test="task.factBeginDate != null">
			and task.start_date =
			#{task.factBeginDate,jdbcType=TIMESTAMP}
		</if>
		<if test="task.factEndDate != null">
			and task.end_date = #{task.factEndDate,jdbcType=TIMESTAMP}
		</if>

	</select>
	<select id="selectProjectChangeByTeam"
		resultType="com.dili.alm.domain.ProjectChange">
		select * from project_change as pc where pc.project_id in (select p.id
		from project as p where p.id in
		(select t.project_id from team as t
		where t.member_id
		=#{selectOwner,jdbcType=BIGINT})) and pc.status = 3
		<if test="projectId != null">
			and pc.project_id = #{projectId,jdbcType=BIGINT}
		</if>
	</select>

	<select id="selectProjectByTeam"
		resultType="com.dili.alm.domain.Project">
		select * from
		project as p where p.id in
		(select t.project_id
		from team as t where
		t.member_id
		=#{selectOwner,jdbcType=BIGINT}) and
		p.project_state
		&lt;&gt;2 and
		p.project_state &lt;&gt; 4 ORDER BY
		p.created DESC
	</select>
	<select id="selectUserByTeam" resultType="java.lang.Long">

		select
		distinct(t2.member_id) from alm.team as t2 where t2.project_id
		in

		(select t.project_id from alm.team as t where t.member_id
		=#{selectOwner,jdbcType=BIGINT})

		ORDER BY t2.join_time DESC
	</select>
	<select id="selectVersionByTeam"
		resultType="com.dili.alm.domain.ProjectVersion">
		select * from
		alm.project_version as version where
		version.project_id
		in
		(select
		distinct(t2.project_id) from alm.team as t2
		where t2.project_id in
		(select t.project_id from alm.team as t where
		t.member_id
		=#{selectOwner,jdbcType=BIGINT})) ORDER BY version.created
		DESC
	</select>

	<!-- 任务工时查询一天是否填写8小时 modified为工时执行日期， cread为工时填写日期 -->
	<select id="selectOtherTaskDetail"
		resultType="com.dili.alm.domain.TaskDetails">
		select * from
		alm.task_details as td where td.task_id in
		(select tt.id from task as
		tt where tt.owner =
		#{selectOwner,jdbcType=BIGINT}) and td.modified like
		CONCAT("%",#{selectDate,jdbcType=VARCHAR},"%")
	</select>
	<select id="selectTotalTaskHourByUserId" resultType="Long">
		SELECT
		(
		IFNULL( t1.total_task_hour, 0 ) + IFNULL( t2.total_work_order_hour, 0
		) ) AS total_hour
		FROM
		(
		SELECT
		sum( td.task_hour + td.over_hour ) AS
		total_task_hour
		FROM
		task_details td
		INNER JOIN task t ON td.task_id =
		t.id
		WHERE
		t.`owner` = #{userId}
		) t1,
		(
		SELECT
		sum( wo.task_hours +
		wo.overtime_hours ) AS total_work_order_hour
		FROM
		work_order_execution_record wo
		INNER JOIN work_order w ON
		wo.work_order_id = w.id
		WHERE
		w.executor_id = #{userId}
		) t2
	</select>

	<!-- 数据统计相关 begin -->
	<select id="selectTaskHourByUser"
		resultType="com.dili.alm.domain.dto.TaskByUsersDto">
		SELECT
		CONCAT( #{beginTime,jdbcType=VARCHAR}, '至',
		#{endTime,jdbcType=VARCHAR} ) AS selectDate,
		u.id AS
		userNo,
		u.department_id AS departmentId,
		d.`name` AS departmentName,
		u.real_name AS userName,
		(
		IFNULL( t1.taskHours, 0 ) + IFNULL(
		t1.overHours, 0 ) + IFNULL(
		t2.workOrderTaskHours, 0 )
		) AS totalHour,
		IFNULL( t1.taskHours, 0 ) AS taskHours,
		IFNULL( t1.overHours, 0 ) AS
		overHours,
		IFNULL( t2.workOrderTaskHours, 0 ) AS workOrderTaskHours
		FROM
		`user` u
		LEFT JOIN (
		SELECT
		t.`owner`,
		sum( td.task_hour ) AS
		taskHours,
		sum( td.over_hour ) AS overHours
		FROM
		task_details td
		INNER
		JOIN task t ON td.task_id = t.id
		WHERE
		td.modified <![CDATA[>=]]>
		CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00')
		AND
		td.modified <![CDATA[<=]]>
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		GROUP BY
		t.`owner`
		) t1
		ON u.id = t1.`owner`
		LEFT JOIN (
		SELECT
		wo.executor_id,
		( sum(
		woer.task_hours ) + sum(
		woer.overtime_hours ) ) AS
		workOrderTaskHours
		FROM
		work_order wo
		INNER
		JOIN work_order_execution_record woer ON wo.id =
		woer.work_order_id
		WHERE
		( woer.start_date BETWEEN
		CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00') AND
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59') AND woer.end_date <![CDATA[<=]]>
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59') )
		OR ( woer.start_date <![CDATA[<=]]>
		CONCAT(#{beginTime,jdbcType=VARCHAR},'
		00:00:00') AND woer.end_date <![CDATA[>=]]>
		'2018-8-31' )
		OR ( woer.start_date <![CDATA[<=]]>
		CONCAT(#{beginTime,jdbcType=VARCHAR},'
		00:00:00') AND woer.end_date
		BETWEEN
		CONCAT(#{beginTime,jdbcType=VARCHAR},' 23:59:59') AND
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59') )
		GROUP BY
		wo.executor_id
		) t2 ON u.id = t2.executor_id
		LEFT JOIN
		department d ON
		u.department_id = d.id
		WHERE
		u.id != 1
		<if test="uIds != null and uIds.size>0">
			AND u.id in
			<foreach item="item" index="index" collection="uIds" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="departmentIds != null and departmentIds.size>0">
			AND u.department_id in
			<foreach item="item" index="index" collection="departmentIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY
		<choose>
			<when test="sort != null and sort != ''">
				${sort}
				<choose>
					<when test="order != null and order != ''">
						${order}
					</when>
					<otherwise>DESC</otherwise>
				</choose>
			</when>
			<otherwise>u.id DESC</otherwise>
		</choose>
	</select>

	<!-- 项目以及项目所用总工时 -->
	<select id="selectProjectHours"
		resultType="com.dili.alm.domain.dto.TaskHoursByProjectDto">
		select p.id as projectId,p.`name` as
		projectName,ifnull(t2.totalHour,0) as sumHour FROM
		project
		as p LEFT
		JOIN
		(select
		t1.project_id as pid ,SUM(td1.taskHours+td1.overHours) as
		totalHour
		from task as t1 LEFT JOIN
		(SELECT task_id as tid,task_hour as
		taskHours,over_hour as overHours FROM
		task_details where 1 =1
		<if test="beginTime != null">
			AND modified <![CDATA[>=]]>
			CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00')
		</if>
		<if test="endTime != null">
			AND modified <![CDATA[<=]]>
			CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		</if>
		) as td1
		on t1.id =
		td1.tid GROUP BY t1.project_id)
		as t2 ON p.id =
		t2.pid
		where
		1=1
		<if test="pids != null and pids.size>0">
			and p.id in
			<foreach item="item" index="index" collection="pids" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY p.id DESC
	</select>
	<!-- 员工以及总工时 -->
	<select id="selectUsersHours"
		resultType="com.dili.alm.domain.dto.SelectTaskHoursByUserDto">
		SELECT distinct(utt2.uid) as userNo ,utt2.real_name as userName FROM
		(select utt.id as uid ,team.project_id as projectId ,utt.real_name as
		real_name from team as team LEFT JOIN alm.`user` as utt ON
		team.member_id = utt.id) as utt2
		where utt2.projectId in
		(select id from
		alm.project as prt where prt.actual_start_date BETWEEN
		CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00') AND
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59') or prt.actual_end_date
		BETWEEN CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00') AND
		CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		<if test="pids != null and pids.size>0">
			and prt.id in
			<foreach item="item" index="index" collection="pids" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		)
		ORDER BY utt2.uid ASC
	</select>

	<!--每个人单独项目下的总工时 -->
	<select id="selectUsersProjectHours"
		resultType="com.dili.alm.domain.dto.SelectTaskHoursByUserProjectDto">
		select SUM(tt.task_hour) as sumUPTaskHours,sum(tt.over_hour) as
		sumUPOverHours,t.`owner` as ownerId,t.project_id as projectId,p.`name`
		as projectName from
		alm.task_details as tt LEFT JOIN alm.task as t ON
		tt.task_id = t.id LEFT JOIN project as p on p.id = t.project_id where
		1=1
		<if test="startTime != null">
			AND tt.modified <![CDATA[>=]]>
			CONCAT(#{startTime,jdbcType=VARCHAR},' 00:00:00')
		</if>
		<if test="endTime != null">
			AND tt.modified <![CDATA[<=]]>
			CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		</if>
		<if test="projectIds != null and projectIds.size>0">
			and t.project_id in
			<foreach item="item" index="index" collection="projectIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="userIds != null and userIds.size>0">
			and t.`owner` in
			<foreach item="item" index="index" collection="userIds"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		GROUP BY t.project_id
	</select>
	<!-- 年度总汇 -->
	<select id="selectProjectYearsCover"
		resultType="com.dili.alm.domain.dto.ProjectYearCoverDto">
		SELECT
		t.project_id AS projectId,
		p.`name` AS projectName,
		p.`type` AS
		projectType,
		p.project_state AS projectstate,
		count( * ) AS taskCount,
		count( CASE WHEN t.`status` = 3 THEN 3 END ) AS finishCount,
		count(
		CASE WHEN t.`status` = 1 THEN 1 END ) AS ongoing,
		count( CASE WHEN
		t.`status` = 3 THEN 3 END ) / count( * ) AS completionRate,
		count( CASE
		WHEN t.`status` = 4 THEN 4 END ) AS noFinish,
		count( CASE WHEN
		t.`status` = 4 THEN 4 END ) / count( * ) AS overdueRate,
		count( CASE
		WHEN t.`status` = 2 THEN 2 END ) AS pauseTotal,
		count( CASE WHEN
		t.`status` = 1 THEN 1 END ) AS beginingTotal,
		count( CASE WHEN
		t.`status` = 4 THEN 4 END ) AS noBeginTotal
		FROM
		(
		SELECT DISTINCT
		t1.*
		FROM
		task t1
		INNER JOIN task_details td1 ON t1.id = td1.task_id
		WHERE 1 =
		1
		<if test="beginTime != null and beginTime != ''">
			AND td1.modified <![CDATA[>=]]>
			CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00')
		</if>
		<if test="endTime != null and endTime != ''">
			AND td1.modified <![CDATA[<=]]>
			CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		</if>
		) t
		LEFT JOIN project p
		ON t.project_id = p.id
		GROUP BY
		t.project_id
		ORDER
		BY
		t.project_id,
		t.`status`
	</select>

	<!-- 年度总汇.图标 -->
	<select id="selectProjectYearsCoverForAll"
		resultType="com.dili.alm.domain.dto.ProjectYearCoverForAllDto">
		SELECT
		t.project_id AS pid,
		count( t.id ) AS taskCount,
		count( CASE WHEN
		t.`status` = 3 THEN 3 END ) AS finishCount,
		count( CASE WHEN t.`status`
		= 1 THEN 1 END ) AS ongoing,
		count( CASE WHEN t.`status` = 4 THEN 4 END
		) AS noFinish,
		count( CASE WHEN t.`status` = 2 THEN 2 END ) AS
		pauseTotal,
		count( CASE WHEN t.`status` = 1 THEN 1 END ) AS
		beginingTotal,
		count( CASE WHEN t.`status` = 0 THEN 0 END ) AS
		noBeginTotal
		FROM
		(
		SELECT DISTINCT
		t1.*
		FROM
		task t1
		INNER JOIN task_details
		td1 ON t1.id = td1.task_id
		WHERE 1 = 1
		<if test="beginTime != null and beginTime != ''">
			AND td1.modified <![CDATA[>=]]>
			CONCAT(#{beginTime,jdbcType=VARCHAR},' 00:00:00')
		</if>
		<if test="endTime != null and endTime != ''">
			AND td1.modified <![CDATA[<=]]>
			CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
		</if>
		) t
	</select>
	<!-- 数据统计相关 end -->

	<select id="selectTaskStateCount"
		resultType="com.dili.alm.domain.dto.TaskStateCountDto">
		SELECT d.code as taskState,
		IFNULL(t1.totalCount, 0) as stateCount
		FROM
		alm.data_dictionary_value AS d
		LEFT JOIN
		(SELECT
		t.status AS task_state,
		COUNT(*) AS totalCount
		FROM
		alm.task AS t
		WHERE t.project_id IN
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
		GROUP BY t.status
		) t1
		ON d.value = t1.task_state
		WHERE d.dd_id =16
	</select>

	<select id="getStateByTaskCount"
		resultType="com.dili.alm.domain.dto.TaskStateCountDto">
		SELECT d.`code` AS taskState,COUNT(*) AS stateCount
		FROM
		alm.task AS t
		LEFT JOIN
		alm.data_dictionary_value AS d
		ON t.`status` = d.`value`
		WHERE
		d.dd_id =16
		<if test="list != null and list.size>0">
			and t.project_id in
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="owner != null">
			AND t.owner=#{owner}
		</if>

		GROUP BY t.`status`
	</select>

	<select id="sumUserProjectTaskHour"
		resultType="java.util.HashMap">
		<!-- {call sumUserProjectTaskHours(#{param})} -->
		SELECT
		u.id AS user_id,
		u.real_name,
		<foreach collection="projectIds" index="index"
			item="projectId">
			IFNULL( t#{index}.total_task_hour, 0 ) AS
			#{projectId}_total_task_hour,
			IFNULL( t#{index}.total_over_hour, 0 )
			AS #{projectId}_total_over_hour,
		</foreach>
		<foreach collection="projectIds" index="index" open="("
			separator="+" close=") as project_user_total_task_hour,">
			IFNULL( t#{index}.total_task_hour, 0 )
		</foreach>
		<foreach collection="projectIds" index="index" open="("
			separator="+" close=") as project_user_total_over_hour,">
			IFNULL( t#{index}.total_over_hour, 0 )
		</foreach>
		<foreach collection="projectIds" index="index" open="("
			separator="+" close=") as project_user_total_hour">
			IFNULL( t#{index}.total_task_hour, 0 ) + IFNULL(
			t#{index}.total_over_hour, 0 )
		</foreach>
		FROM `user` u LEFT JOIN
		<foreach collection="projectIds" index="index"
			item="projectId" separator=" LEFT JOIN " close="">
			(SELECT DISTINCT
			t.`owner` AS user_id,
			sum( td.task_hour ) AS
			total_task_hour,
			sum(
			td.over_hour ) AS total_over_hour
			FROM
			task_details td
			INNER JOIN task t
			ON td.task_id = t.id
			INNER JOIN
			project p ON t.project_id = p.id
			WHERE
			t.project_id = #{projectId} AND td.modified
			BETWEEN
			CONCAT(#{startTime,jdbcType=VARCHAR},' 00:00:00') AND
			CONCAT(#{endTime,jdbcType=VARCHAR},' 23:59:59')
			GROUP BY
			t.`owner`
			)
			t#{index} ON u.id
			= t#{index}.user_id
		</foreach>
		WHERE 1 =1
		<if test="userIds != null and userIds.size > 0">
			AND u.id IN
			<foreach collection="userIds" open="(" separator=","
				close=")" item="userId">
				#{userId}
			</foreach>
		</if>
		AND u.id != 1
	</select>

	<select id="selectUserWorkHourDetail"
		resultMap="UserWorkHourDetailRM">
		SELECT
		DATE_FORMAT( td.modified, '%Y-%m-%d' ) AS task_date,
		td.task_hour AS task_hours,
		td.over_hour AS overtime_hours,
		td.`describe` AS work_content,
		t.`owner` AS user_id
		FROM
		task_details td
		INNER JOIN task t ON td.task_id = t.id WHERE t.`owner` = #{userId}
		UNION
		SELECT
		CONCAT( DATE_FORMAT( wo.start_date, '%Y-%m-%d' ), '至',
		DATE_FORMAT(
		wo.end_date, '%Y-%m-%d' ) ) AS task_date,
		wo.task_hours,
		wo.overtime_hours,
		wo.work_content,
		w.executor_id AS user_id
		FROM
		work_order_execution_record wo
		INNER JOIN work_order w ON
		wo.work_order_id = w.id
		WHERE w.executor_id = #{userId}
		ORDER BY
		task_date DESC
	</select>

</mapper>
